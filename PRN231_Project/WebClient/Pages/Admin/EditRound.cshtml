@page
@using WebAPI.Business.DTO;
@model WebClient.Pages.Admin.EditRoundModel
@{
    Layout = "AdminShared/_Layout";
}
<link href="~/css/BracketStyle.css" rel="stylesheet" />
<style>
    #container-wrapper{
        all: unset;
        position: relative;
    }

    .cancel-btn{
        position: absolute;
        top: 10px;
        left: 10px;
    }
    
    .save-btn{
        position: absolute;
        top: 10px;
        right: 10px;
    }

    [class^='select2'] {
        border-radius: 0px !important;
    }

    .select2-container--default .select2-selection--single {
        border: none !important;
    }

    button{
        border: none;
        outline: none !important;
        cursor: pointer;
    }

    .round{
        position: relative;
    }

    .delete-btn{
        position: absolute;
        top: 0;
        right: 0;
        background: transparent;
    }
</style>
@Html.AntiForgeryToken()
<a href="/Admin/EditTournament?Id=@Model.TourId" class="cancel-btn fab-btn mb-3">Trở Về</a>
<section id="bracket" style="width: 100%; min-height: 100vh;">
    
    <div class="container">
        <div class="split split-full">
            @if(Model.Rounds != null && Model.Rounds.Count > 0)
            {
                @foreach(RoundDTO round in Model.Rounds)
                {
                    @if (round.RoundId == Model.RoundId)
                    {
                        <form method="post" class="round round-name current col-md-2 col-sm-4 mb-2 col-6">
                            <input hidden name="tourId" value="@Model.TourId" />
                            <input hidden name="roundId" value="@round.RoundId" />
                            <div class="round">
                                <button asp-page-handler="Match" class="round-details round-btn">@round.RoundName</button>
                                <button type="button" class="delete-btn" onclick="DeleteRound(this)">
                                    <i class="close-btn bi bi-x"></i>
                                </button>
                            </div>
                        </form>
                    }
                    else
                    {
                        <form method="post" class="round round-name col-md-2 col-sm-4 mb-2 col-6">
                            <input hidden name="tourId" value="@Model.TourId" />
                            <input hidden name="roundId" value="@round.RoundId" />
                            <div class="round">
                                <button asp-page-handler="Match" class="round-details round-btn">@round.RoundName</button>
                                <button type="button" class="delete-btn" onclick="DeleteRound(this)">
                                    <i class="close-btn bi bi-x"></i>
                                </button>
                            </div>
                        </form>
                    }
                }
            }
        </div>
    </div>
    @if(Model.Matches != null && Model.Matches.Count > 0)
    {
        <form id="save-form" method="post" asp-page-handler="Save">
            <input hidden name="roundId" value="@Model.RoundId" />
            <input hidden id="tourId" name="tourId" value="@Model.TourId" />
            <div class="container center">
                <div class="split split-one">
                    <div class="round round-one current">
                        @foreach(MatchDTO match in Model.Matches)
                        {
                            <ul class="matchup">
                                <li class="team team-top">
                                    <select name="player1Id" class="userSelect" style="width: 100%;">
                                        <option value="@match.Player1Navigation?.UserId" selected="selected">@match.Player1Navigation?.FullName (@match.Player1Navigation?.UserId)</option>
                                        @foreach(UserDTO player in Model.Players)
                                        {
                                            <option value="@player.UserId">@player.FullName (@player.UserId)</option>
                                        }
                                        <option value="0"></option>
                                    </select>
                                    <span class="score"></span>
                                </li>
                                <li class="team team-bottom">
                                    <select name="player2Id" class="userSelect" style="width: 100%;">
                                        <option value="@match.Player2Navigation?.UserId" selected="selected">@match.Player2Navigation?.FullName (@match.Player2Navigation?.UserId)</option>
                                        @foreach (UserDTO player in Model.Players)
                                        {
                                            <option value="@player.UserId">@player.FullName (@player.UserId)</option>
                                        }
                                        <option value="0"></option>
                                    </select>
                                    <span class="score"></span>
                                </li>
                            </ul>
                        }
                    </div>

                    <div class="round round-two">
                        @foreach (MatchDTO match in Model.Matches)
                        {
                            <ul class="matchup">
                                <li class="team team-top">
                                    <select name="winerId" class="userSelect" style="width: 100%;">
                                        <option value="@match.WinerNavigation?.UserId" selected="selected">@match.WinerNavigation?.FullName (@match.Player1Navigation?.UserId)</option>
                                        @foreach (UserDTO player in Model.Players)
                                        {
                                            <option value="@player.UserId">@player.FullName (@player.UserId)</option>
                                        }
                                        <option value="0"></option>
                                    </select>
                                </li>
                            </ul>
                        }
                    </div>
                </div>
            </div>
            <button class="save-btn fab-btn">Lưu</button>
        </form>
    }
</section>
<script>
    $(document).ready(function () {
        $('.userSelect').select2({
            placeholder: 'Chọn Người Chơi',
            multiple: false,
            ajax: {
                url: '/Admin/EditRound?handler=GetUsers',
                dataType: 'json',
                type: "POST",
                contentType: 'application/x-www-form-urlencoded',
                headers:
                {
                    "RequestVerificationToken": $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                data: function (params) {
                    return {
                        term: params.term,
                        tourId: $('#tourId').val()
                    };
                },
                processResults: function (data) {
                    return {
                        results: data
                    };
                },
                cache: true
            }
        });

        $('b[role="presentation"]').hide();
    });
</script>
<script>
    const swalWithBootstrapButtons = Swal.mixin({
        customClass: {
            confirmButton: 'btn btn-success',
            cancelButton: 'btn btn-danger'
        },
        buttonsStyling: false
    })
    var DeleteRound = (btn) => {
        swalWithBootstrapButtons.fire({
            title: 'Bạn có muốn xóa giải đấu không?',
            text: "Không hoàn tác lại giải đấu!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Xóa Giải Đấu!',
            cancelButtonText: 'Hủy!',
            reverseButtons: true
        }).then((result) => {
            if (result.isConfirmed) {
                var form = btn.closest('form');
                form.action = '/Admin/EditRound?handler=Delete';
                form.method = 'post';
                form.submit();
            }
            else if (result.dismiss === Swal.DismissReason.cancel) {
                swalWithBootstrapButtons.fire(
                    'Hủy thành công',
                    'Giải đấu của bạn vẫn tồn tại',
                    'error'
                )
            }
        })
    }
</script>